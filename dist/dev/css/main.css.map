{"version":3,"sources":["css/main.scss","css/_overridemedia.scss","css/_flexlayout.scss","css/_marginpadding.scss","../../node_modules/@angular/material/core/a11y/_a11y.scss","../../node_modules/@angular/material/core/ripple/_ripple.scss","../../node_modules/@angular/material/core/style/_menu-common.scss","../../node_modules/@angular/material/core/option/_option.scss","../../node_modules/@angular/material/core/_core.scss","../../node_modules/@angular/material/core/style/_elevation.scss","../../node_modules/@angular/material/core/style/_list-common.scss","../../node_modules/@angular/material/core/style/_variables.scss","css/main.css","../../node_modules/@angular/material/core/overlay/_overlay.scss","../../node_modules/@angular/material/core/theming/_palette.scss","../../node_modules/@angular/material/core/option/_option-theme.scss","../../node_modules/@angular/material/core/selection/pseudo-checkbox/_pseudo-checkbox-theme.scss","../../node_modules/@angular/material/autocomplete/_autocomplete-theme.scss","../../node_modules/@angular/material/button/_button-theme.scss","../../node_modules/@angular/material/button-toggle/_button-toggle-theme.scss","../../node_modules/@angular/material/card/_card-theme.scss","../../node_modules/@angular/material/checkbox/_checkbox-theme.scss","../../node_modules/@angular/material/chips/_chips-theme.scss","../../node_modules/@angular/material/dialog/_dialog-theme.scss","../../node_modules/@angular/material/icon/_icon-theme.scss","../../node_modules/@angular/material/input/_input-theme.scss","../../node_modules/@angular/material/list/_list-theme.scss","../../node_modules/@angular/material/menu/_menu-theme.scss","../../node_modules/@angular/material/progress-bar/_progress-bar-theme.scss","../../node_modules/@angular/material/progress-spinner/_progress-spinner-theme.scss","../../node_modules/@angular/material/radio/_radio-theme.scss","../../node_modules/@angular/material/select/_select-theme.scss","../../node_modules/@angular/material/sidenav/_sidenav-theme.scss","../../node_modules/@angular/material/slide-toggle/_slide-toggle-theme.scss","../../node_modules/@angular/material/slider/_slider-theme.scss","../../node_modules/@angular/material/tabs/_tabs-theme.scss","../../node_modules/@angular/material/toolbar/_toolbar-theme.scss","../../node_modules/@angular/material/tooltip/_tooltip-theme.scss"],"names":[],"mappings":"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pB1B;EAND;IAII,eF6iBO,EE5iBR;;AAGH;EACE,aAAY,EAiBb;EAlBD;IAII,oBF2FQ,EE1FT;EALH;IAQI,oBFiaQ,EEhaT;EATH;IAYI,oBFhBQ,EEiBT;EAbH;IAgBI,oBA3BkC,EA4BnC;;ARRH;EAEE,0BM8hBS,EN7hBV;;AS/BD;EACE,kBHsoBe;EGroBf,2BHqqByB,EG7pB1B;EAVD;IAMM,kBHioBW;IGhoBX,2BHgqBqB,EG/pBtB;;ACLS;EACZ,2CJ8GU,EI7GX;;AAEY;EACX,2CJ0bW,EIzbZ;;AAEU;EACT,0CJGU,EIFX;;AA0CD;EAEE,wBAAuB,EAOxB;EAxCD;IACE,eJyFU,EIxFX;EACD;IACE,eJsaW,EIraZ;EACD;IACE,eJhBU,EIiBX;EAGC;IAEE,2BJ4nBuB,EI3nBxB;EAnCW;IACZ,2CJ8GU,EI7GX;EAEY;IACX,2CJ0bW,EIzbZ;EAEU;IACT,0CJGU,EIFX;;AAqDD;EAEE,2BJmmByB;EIlmBzB,wBJqkBkB,EIjkBnB;EAjDD;IACE,iCJtByB,EIuB1B;EACD;IACE,2BJ1ByB,EI2B1B;EACD;IACE,aJDU,EIEX;EAGC;IAEE,2BJ4nBuB,EI3nBxB;EAdH;IACE,0BJyFU,EIxFX;EACD;IACE,0BJsaW,EIraZ;EACD;IACE,0BJhBU,EIiBX;EAGC;IAEE,sCJjCuB,EIkCxB;;AAqCH;EACE,0BJsXW;EIrXX,2BJ3EyB,EI4E1B;;ACpED;EACE,2BLwpByB,EKnpB1B;EAfD;IACE,sCLIwB,EKHzB;;AAeD;EACE,0BL4iBU;EK3iBV,aLyoBoB,EKxoBrB;;AAED;EACE,0BLsiBU;EKriBV,2BLwoByB,EKnoB1B;EAPD;IAKI,0BLoiBQ,EKniBT;;AC3BH;EACE,kBNooBe;EMnoBf,aNypBoB,EMxpBrB;;AAED;EACE,2BN4pByB,EM3pB1B;;ACMD;EACE,kCPopByB,EOnpB1B;;AAED;EACE,cPwiBS,EOviBV;;AAED;EAGE,2BAAuC,EACxC;;AAED;EACE,0BP8hBS,EO7hBV;;AAED;EAEI,0BP+EQ,EO9ET;;AAHH;EAMI,0BPqZQ,EOpZT;;AAPH;EAUI,0BP5BQ,EO6BT;;AAGH;EAGM,0BAtCgC,EAuCjC;;AAJL;EASM,sBA5CgC,EA6CjC;;AAIL;EAEI,2CPmDQ,EOlDT;;AAHH;EAMI,2CP+XS,EO9XV;;AAPH;EAUI,0CPxDQ,EOyDT;;ACtDH;EACE,0BAP8E;EAQ9E,2BAboC,EAcrC;;AAED;EACE,0BAT+E;EAU/E,iCRtByB,EQsC1B;EAlBD;IAKI,0BRsFQ;IQrFR,iCR1BuB,EQ2BxB;EAPH;IAUI,0BR2ZQ;IQ1ZR,2BRhCuB,EQiCxB;EAZH;IAeI,0BRvBQ;IQwBR,aRTQ,EQUT;;ACvCH;EACE,kBTsoBe,ESroBhB;;ACED;EAEI,eV2GQ,EU1GT;;AAHH;EAMI,eVubS,EUtbV;;AAPH;EAUI,eVAQ,EUCT;;ACAH;EACE,2BXkpByB,EWpoB1B;EAVC;IACE,eX4FQ,EWpFT;IATD;MAII,eXyaO,EWxaR;IALH;MAOI,eXbM,EWcP;;AAIL;EACE,2BXgoByB,EW/nB1B;;AAGD;;EAGI,eXyZS,EWxZV;;AAGH;EACE,kCX1CyB,EWsD1B;EAbD;IAII,0BXiEQ,EWzDT;IAZH;MAOM,0BX8YO,EW7YR;IARL;MAUM,0BXxCM,EWyCP;;AAIL;;EAGI,eXhDQ,EWiDT;;AAJH;EAOI,sBXpDQ,EWqDT;;AARH;EAUI,eXvDQ,EWwDT;;ACrEH;EAEI,aZypBkB,EYxpBnB;;AAHH;EAMI,2BZ4pBuB,EY3pBxB;;AAGH;EACE,sCZTyB,EYU1B;;AAED;EAEI,gCZonBkB,EYnnBnB;;ACjBH;EACE,kBbooBe,EanoBhB;;AAED;EACE,wBAAuB;EACvB,2Bb+pByB,EajpB1B;EAhBD;IAKI,2BbqpBuB,EappBxB;EANH;IASI,2BbspBuB;IarpBvB,uBAAsB,EACvB;EAXH;IAcI,gCbknBkB,EajnBnB;;AClBH;EACE,keAAY,EACb;;AAED;EACE,0BdsGU,EcrGX;;AAED;EACE,0BduGU,EctGX;;AAED;EAEI,keAAY,EACb;;AAHH;EAMI,0BdmaQ,EclaT;;AAPH;EASI,0BdqaQ,EcpaT;;AAGH;EAEI,keAAY,EACb;;AAHH;EAMI,0BdvBQ,EcwBT;;AAPH;EASI,0BdrBQ,EcsBT;;ACnCH;EAEI,gBf8GQ,Ee7GT;;AAHH;EAMI,gBfobQ,EenbT;;AAPH;EAUI,gBfGQ,EeFT;;ACTH;EACE,kChB8pByB,EgBrpB1B;EAPC;IACE,sBhBybS,EgBxbV;EAED;IACE,kChBmpBuB,EgBlpBxB;;AAGH;EACE,0BhBgbW,EgB3aZ;EAHC;IACE,sChB2oBuB,EgB1oBxB;;AAGH;EACE,2ChBwaW,EgBnaZ;EANiB;IAId,sChBmoBuB,EgBloBxB;;AC3BH;EACE,2BjB+pByB,EiBtpB1B;EAPC;IACE,ejB2GQ,EiB1GT;EAED;IACE,ejBIQ,EiBHT;;AAGH;EACE,sCjBZyB,EiBqB1B;EAPC;IACE,0BjB+FQ,EiB9FT;EAED;IACE,0BjBRQ,EiBST;;AAGH;EACE,2BjBuoByB,EiB9nB1B;EAPC;IACE,ejBmFQ,EiBlFT;EAED;IACE,ejBpBQ,EiBqBT;;AAGH;EACE,kBjB+lBe,EiB9lBhB;;AAED;EACE,2BjB2nByB,EiBtnB1B;EAHC;IACE,2BjBonBuB,EiBnnBxB;;ACnCH;EACE,0BlB8iBS;EkB7iBT,2BlBwpByB,EkBvpB1B;;AAED;EACE,wBlBqnBe;EkBpnBf,2BlBmpByB,EkB9oB1B;EAPD;IAKI,wBlBinBa,EkBhnBd;;AAGH;EACE,qCApBgE,EAqBjE;;AC5BC;EACE,0BnB0bQ,EmBzbT;;AAED;EACE,yCnBsbQ,EmBrbT;;AAMiB;EAClB,sCnB+oBoB,EmB9oBrB;;AACD;EACE,0CnB2aU,EmB1aX;;AAjBC;EACE,0BnBgHQ,EmB/GT;;AAED;EACE,0CnB4GQ,EmB3GT;;AAMiB;EAClB,sCnB+oBoB,EmB9oBrB;;AACD;EACE,2CnBiGU,EmBhGX;;AAjBC;EACE,0BnBaQ,EmBZT;;AAED;EACE,yCnBSQ,EmBRT;;AAMiB;EAClB,sCnB+oBoB,EmB9oBrB;;AACD;EACE,0CnBFU,EmBGX;;AA4CD;EAKI,0BnB6fQ,EmB5fT;;AANH;EAQI,qCAlC2D,EAmC5D;;AAGH;EACE,0BnBifS,EmBhfV;;AAED;EACE,sCnBilByB,EmBhlB1B;;ACzED;EACE,sCAP+B,EAQhC;;AAED;EACE,0BpBsbW,EoBrbZ;;AAED;EACE,0BpBkbW,EoBjbZ;;AAED;EACE,0BpB8aW,EoB7aZ;;AAED;EACE,2BpBtByB,EoBuB1B;;AAED;;EAGI,sCA5BqC,EA6BtC;;AAGH;;;EAII,sCAnCkC,EAoCnC;;AALH;EASM,sCAxCgC,EAyCjC;;AAIL;;EAIM,wBAhD0C,EAiD3C;;AALL;;EAUQ,sCArDmD,EAsDpD;;AAXP;EAiBM,kCAhE2B;EAiE3B,8BAA6B,EAC9B;;AAnBL;EAwBQ,kCAtEiC,EAuElC;;AAzBP;EA4BQ,kCAzE8B,EA0E/B;;ACxEP;;EAEE,iCrBwjBU,EqBljBX;EAJC;;IACE,8BrBqjBQ;IqBpjBR,oBAAmB,EACpB;;AAGH;EACE,2CrB8FU,EqB7FX;;AAED;EACE,0BrB8FU,EqB7FX;;ACXD;EACE,uBtBkjBU;EsBjjBV,2BtB2pByB,EsB9oB1B;EAfD;IAXA,oBtBmHY;IsBlHZ,iCtBG2B,EsBaxB;EANH;IAXA,oBtBmca;IsBlcb,2BtBE2B,EsBkBxB;EAVH;IAXA,oBtBgBY;IsBfZ,atB8BY,EsBNT;;ACzBH;EACE,kCvBmkBU,EuBlkBX","file":"main.css","sourcesContent":["@import '../scss/variables';\n@import \"overridemedia\";\n@import \"flexlayout\";\n@import 'fonts.css';\n@import 'marginpadding';\n\n/* Reset */\n\nhtml,\nbody,\ndiv {\n  border: 0;\n  margin: 0;\n  padding: 0;\n}\n\n\n/* Box-sizing border-box */\n\n* {\n  box-sizing: border-box;\n}\n\n\n/* Set up a default font and some padding to provide breathing room */\n\nbody {\n  font-family: Lato, \"Helvetica Neue\", sans-serif;\n  font-size: 16px;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\np {\n  font-weight: 400;\n  letter-spacing: 0.01em;\n  line-height: 20px;\n  margin-bottom: 1em;\n  margin-top: 1em;\n}\n\nul {\n  margin: 10px 0 0;\n  padding: 0 0 0 20px;\n}\n\nli {\n  font-weight: 400;\n  margin-top: 4px;\n}\n\n// button:hover {\n//   background-color: $secondary;\n// }\n\n/* platform specific */\n\n.desktop lang-switcher {\n  display: none;\n}\n\n.main-container {\n  max-width: 960px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  // background-color: #FFF;\n  // box-shadow: 0 0 4px rgba(0,0,0,0.3);\n  // flex: 1;\n  // padding: 16px 0;\n  // background-color: #EEE;\n  &.progress-blured {\n    filter: blur(2px);\n  }\n}\n\n// @media ($mat-small) {\n//   .main-container {\n//     margin-left: -16px;\n//     margin-right: -16px;\n//   }\n// }\n.container {\n  // background-color: #EEEEEE;\n  // margin-top: 32px;\n  // margin: 16px -16px;\n  // margin-top: 32px;\n  /* padding-right: 16px; */\n  max-width: 960px;\n  // box-shadow: 0 2px 2px 0 rgba(0,0,0,.14), 0 3px 1px -2px rgba(0,0,0,.2), 0 1px 5px 0 rgba(0,0,0,.12);\n  &.centered {\n    text-align: center;\n  }\n}\n\n@media (max-width:960px) {\n  .container {\n    // margin: 0 -16px;\n    // margin-top: 32px;\n    // box-shadow: none;\n    // width: 100%;\n  }\n}\n\n.page-title {\n  font-size: 16px;\n  text-transform: uppercase;\n  font-weight: 700;\n  color: #225FA2;\n  margin-top: 0;\n}\n\n.content-title {\n  font-size: 16px;\n  font-weight: 300;\n  color: #555;\n  margin-top: 0;\n}\n\n.info-content {\n  padding: 16px 0;\n  &>p.title {\n    font-size: 14px;\n    font-weight: 700;\n    color: #555;\n    margin: 0;\n  }\n  &>p.info {\n    font-size: 14px;\n    font-weight: 300;\n    color: #666;\n    margin: 0;\n  }\n}\n\na.content-link {\n  text-decoration: none;\n  font-size: 14px;\n  color: #2260A4;\n  text-transform: capitalize;\n  font-weight: 300;\n  &>span {\n    font-size: 16px;\n    float: left;\n  }\n  &>.mat-icon {\n    float: left;\n    margin-right: 5px;\n    &+span {\n      line-height: 24px;\n    }\n  }\n}\n\n.hr-dashed {\n  border-top: 3px dotted #AAA;\n}\n\nmd-radio-group>label {\n  display: block;\n  padding-bottom: 8px;\n  padding-top: 8px;\n}\n\n.seperator-space {\n  display: inline-block;\n  width: 50px;\n}\n\n.mat-input-suffix .mat-icon.error-icon {\n  color: #F44336;\n  width: 16px;\n  height: 16px;\n  font-size: 16px;\n  font-weight: 700;\n  vertical-align: bottom;\n}\n\n.mat-input-suffix .mat-icon.no-error-icon {\n  color: #673AB7;\n  width: 16px;\n  height: 16px;\n  font-size: 16px;\n  font-weight: 700;\n  vertical-align: bottom;\n}\n\n.message-container {\n  width: 100%;\n  background-color: #f5f5f5;\n  box-shadow: inset 0 4px 4px -4px rgba(0, 0, 0, 0.3), inset 0 -4px 4px -4px rgba(0, 0, 0, 0.3), 4px 0 0 0 #f5f5f5, -4px 0 0 0 #F5F5F5;\n  transition: all 250ms ease-in-out;\n  min-height: 0;\n}\n\n.message-container>.message {\n  display: table;\n  padding: 8px;\n  width: 100%;\n  border-bottom: 1px solid #FFF;\n}\n\n.message-container>.message:last-child {\n  border-bottom: none;\n}\n\n.message>.mat-icon {\n  display: table-cell;\n  vertical-align: middle;\n}\n\n.message>p {\n  display: table-cell;\n  vertical-align: middle;\n  padding-left: 5px;\n  margin: 0;\n  font-size: 14px;\n}\n\n.message.error>p,\n.message.error>.mat-icon {\n  color: #D9534F;\n}\n\n.message.warning>p,\n.message.warning>.mat-icon {\n  color: #F0AD4E;\n}\n\n.message.info>p,\n.message.info>.mat-icon {\n  color: #337AB7;\n}\n\n.message-container.active {\n  padding: 0;\n  min-height: 60px;\n}\n\n@import '@angular/material/core/theming/prebuilt/deeppurple-amber.scss';\n// @import 'responsivegrid.css';","@import '@angular/material/core/style/variables';\n@import '@angular/material/toolbar/toolbar-variables';\n\n\n\n@mixin web-container-height($height) { //set web container toppadding for fixed header\n  .web {\n    padding-top: $height * 2;\n  }\n}\n.web{\n  position: relative;\n  padding-bottom: 52px;\n  // display: flex;\n  // flex-direction: column;\n  // background-color: #f5f5f5;\n  // align-items: stretch;\n  // background-color: #EEE;\n}\n@include web-container-height($mat-toolbar-height-desktop); // set default style\n\n@media ($mat-xsmall) and (orientation: portrait) {\n  @include web-container-height($mat-toolbar-height-mobile-portrait);\n}\n\n// Specific height for mobile devices in landscape mode.\n@media ($mat-small) and (orientation: landscape) {\n  @include web-container-height($mat-toolbar-height-mobile-landscape);\n}","// Contains all the styles for flex-layout\n$flex-container-padding-size: 16px;\n\n\n.flex-container {\n  &.with-padding-top{\n    padding-top:$flex-container-padding-size;\n  }\n  &.with-padding-bottom{\n    padding-bottom: $flex-container-padding-size;\n  }\n  &.with-padding-left{\n    padding-left: $flex-container-padding-size;\n  }\n  &.with-padding-horizontal{\n    padding-right: $flex-container-padding-size;\n  }\n  &.with-padding-vertical{\n    padding-top:$flex-container-padding-size;\n    padding-bottom: $flex-container-padding-size;\n  }\n  &.with-padding-horizontal{\n    padding-left: $flex-container-padding-size;\n    padding-right: $flex-container-padding-size;\n  }\n  &.with-padding-all{\n    padding: $flex-container-padding-size;\n  }\n  // &.with-gutter {\n  //   padding: 0 8px;\n  //   &>.flex-grid {\n  //     padding: 8px;\n  //   }\n  // }\n  // &.with-vertical-gutter {\n  //   &>.flex-grid {\n  //     padding: 8px 0;\n  //   }\n  // }\n  // &.with-horizontal-gutter {\n  //   &.no-border{\n  //     margin-left: -8px;\n  //     margin-right: -8px;\n  //   }\n  //   &>.flex-grid {\n  //     padding: 0 8px;\n  //   }\n  // }\n}\n\n.flex-grid>.display-as-block {\n  display: block;\n}\n\n.flex-center{\n  display: flex !important;\n  align-items: center;\n  // justify-content: center;\n}\n\ndiv[fxLayout=\"column\"] .flex-grid{\n  flex: 1 1 auto !important;\n}",".margin-none{\n  margin: 0;\n}\n.margin-all{\n  margin: 16px;\n}\n.margin-vertical{\n  margin-top:16px;\n  margin-bottom: 16px;\n}\n.margin-vertical-only{\n  margin: 16px 0;\n}\n.margin-horizontal{\n  margin-left: 16px;\n  margin-right: 16px;\n}\n.margin-horizontal-only{\n  margin: 0 16px;\n}\n.margin-top{\n  margin-top: 16px;\n}\n.margin-top-only{\n  margin: 16px 0 0 0;\n}\n.margin-bottom{\n  margin-bottom: 16px;\n}\n.margin-bottom-only{\n  margin: 0 0 16px 0;\n}\n.margin-left{\n  margin-left: 16px;\n}\n.margin-left-only{\n  margin: 0 0 0 16px;\n}\n.margin-right{\n  margin-right: 16px;\n}\n.margin-right-only{\n  margin: 0 16px 0 0;\n}\n\n\n\n.padding-none{\n  padding: 0;\n}\n.padding-all{\n  padding: 16px;\n}\n.padding-vertical{\n  padding-top:16px;\n  padding-bottom: 16px;\n}\n.padding-vertical-only{\n  padding: 16px 0;\n}\n.padding-horizontal{\n  padding-left: 16px;\n  padding-right: 16px;\n}\n.padding-horizontal-only{\n  padding: 0 16px;\n}\n.padding-top{\n  padding-top: 16px;\n}\n.padding-top-only{\n  padding: 16px 0 0 0;\n}\n.padding-bottom{\n  padding-bottom: 16px;\n}\n.padding-bottom-only{\n  padding: 0 0 16px 0;\n}\n.padding-left{\n  padding-left: 16px;\n}\n.padding-left-only{\n  padding: 0 0 0 16px;\n}\n.padding-right{\n  padding-right: 16px;\n}\n.padding-right-only{\n  padding: 0 16px 0 0;\n}","@mixin cdk-a11y {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    text-transform: none;\n    width: 1px;\n  }\n}\n\n/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n */\n@mixin cdk-high-contrast {\n  @media screen and (-ms-high-contrast: active) {\n    @content;\n  }\n}\n","@import '../theming/theming';\n\n$mat-ripple-color-opacity: 0.1;\n\n@mixin mat-ripple() {\n  // The host element of an md-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripple divs it creates inside itself are correctly positioned.\n  .mat-ripple {\n    overflow: hidden;\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n  }\n}\n\n/* Theme for the ripple elements.*/\n@mixin mat-ripple-theme($theme) {\n  $foreground: map_get($theme, foreground);\n  $foreground-base: map_get($foreground, base);\n\n  .mat-ripple-element {\n    background-color: rgba($foreground-base, $mat-ripple-color-opacity);\n  }\n}\n\n\n// A mixin, which generates temporary ink ripple on a given component.\n// To be removed once the real ripple is applied to all elements.\n// When $bindToParent is set to true, it will check for the focused class on the same selector as you included\n// that mixin.\n// It is also possible to specify the color palette of the temporary ripple. By default it uses the\n// accent palette for its background.\n@mixin mat-temporary-ink-ripple($component, $bindToParent: false) {\n  // TODO(mtlin): Replace when ink ripple component is implemented.\n  // A placeholder ink ripple, shown when keyboard focused.\n  .mat-ink-ripple {\n    border-radius: 50%;\n    opacity: 0;\n    height: 48px;\n    left: 50%;\n    overflow: hidden;\n    pointer-events: none;\n    position: absolute;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    transition: opacity ease 280ms, background-color ease 280ms;\n    width: 48px;\n  }\n\n  // Fade in when radio focused.\n  #{if($bindToParent, '&', '')}.mat-#{$component}-focused .mat-ink-ripple {\n    opacity: 1;\n  }\n\n  // TODO(mtlin): This corresponds to disabled focus state, but it's unclear how to enter into\n  // this state.\n  #{if($bindToParent, '&', '')}.mat-#{$component}-disabled .mat-ink-ripple {\n    background-color: #000;\n  }\n}\n","@import './variables';\n@import './elevation';\n@import './list-common';\n\n/** The mixins below are shared between md-menu and md-select */\n\n// menu width must be a multiple of 56px\n$mat-menu-overlay-min-width: 112px !default;   // 56 * 2\n$mat-menu-overlay-max-width: 280px !default;   // 56 * 5\n\n$mat-menu-item-height: 48px !default;\n$mat-menu-font-size: 16px !default;\n$mat-menu-side-padding: 16px !default;\n\n@mixin mat-menu-base() {\n  @include mat-elevation(8);\n  min-width: $mat-menu-overlay-min-width;\n  max-width: $mat-menu-overlay-max-width;\n\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;   // for momentum scroll on mobile\n}\n\n@mixin mat-menu-item-base() {\n  @include mat-truncate-line();\n\n  // Needs to be a block for the ellipsis to work.\n  display: block;\n  line-height: $mat-menu-item-height;\n  height: $mat-menu-item-height;\n  padding: 0 $mat-menu-side-padding;\n\n  font-size: $mat-menu-font-size;\n  font-family: $mat-font-family;\n  text-align: start;\n  text-decoration: none;   // necessary to reset anchor tags\n\n  &[disabled] {\n    cursor: default;\n  }\n\n  .mat-icon {\n    margin-right: 16px;\n\n    [dir='rtl'] & {\n      margin-left: 16px;\n    }\n  }\n}\n\n/**\n * This mixin adds the correct panel transform styles based\n * on the direction that the menu panel opens.\n */\n@mixin mat-menu-positions() {\n  &.mat-menu-after.mat-menu-below {\n    transform-origin: left top;\n  }\n\n  &.mat-menu-after.mat-menu-above {\n    transform-origin: left bottom;\n  }\n\n  &.mat-menu-before.mat-menu-below {\n    transform-origin: right top;\n  }\n\n  &.mat-menu-before.mat-menu-above {\n    transform-origin: right bottom;\n  }\n\n  [dir='rtl'] & {\n    &.mat-menu-after.mat-menu-below {\n      transform-origin: right top;\n    }\n\n    &.mat-menu-after.mat-menu-above {\n      transform-origin: right bottom;\n    }\n\n    &.mat-menu-before.mat-menu-below {\n      transform-origin: left top;\n    }\n\n    &.mat-menu-before.mat-menu-above {\n      transform-origin: left bottom;\n    }\n  }\n}\n","@import '../style/menu-common';\n@import '../a11y/a11y';\n\n/**\n * This mixin contains shared option styles between the select and\n * autocomplete components.\n */\n@mixin mat-option() {\n  .mat-option {\n    @include mat-menu-item-base();\n    position: relative;\n    cursor: pointer;\n    outline: none;\n\n    &[aria-disabled='true'] {\n      cursor: default;\n      user-select: none;\n    }\n  }\n\n  .mat-option-ripple {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n\n    // In high contrast mode this completely covers the text.\n    @include cdk-high-contrast {\n      opacity: 0.5;\n    }\n  }\n}\n\n","// Core styles that can be used to apply material design treatments to any element.\n@import 'a11y/a11y';\n@import 'style/elevation';\n@import 'overlay/overlay';\n@import 'ripple/ripple';\n@import 'option/option';\n@import 'option/option-theme';\n@import 'selection/pseudo-checkbox/pseudo-checkbox-theme';\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin mat-core() {\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .mat-elevation-z#{$zValue} {\n      @include mat-elevation($zValue);\n    }\n  }\n\n  @include mat-ripple();\n  @include mat-option();\n  @include cdk-a11y();\n  @include cdk-overlay();\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin mat-core-theme($theme) {\n  @include mat-ripple-theme($theme);\n  @include mat-option-theme($theme);\n  @include mat-pseudo-checkbox-theme($theme);\n\n  // Wrapper element that provides the theme background when the\n  // user's content isn't inside of a `md-sidenav-container`.\n  .mat-app-background {\n    $background: map-get($theme, background);\n    background-color: mat-color($background, background);\n  }\n}\n","@import 'variables';\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://www.google.com/design/spec/what-is-material/elevation-shadows.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n$_umbra-color: rgba(black, 0.2);\n$_penumbra-color: rgba(black, 0.14);\n$_ambient-color: rgba(black, 0.12);\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n$_umbra-elevation-map: (\n  0: '0px 0px 0px 0px #{$_umbra-color}',\n  1: '0px 2px 1px -1px #{$_umbra-color}',\n  2: '0px 3px 1px -2px #{$_umbra-color}',\n  3: '0px 3px 3px -2px #{$_umbra-color}',\n  4: '0px 2px 4px -1px #{$_umbra-color}',\n  5: '0px 3px 5px -1px #{$_umbra-color}',\n  6: '0px 3px 5px -1px #{$_umbra-color}',\n  7: '0px 4px 5px -2px #{$_umbra-color}',\n  8: '0px 5px 5px -3px #{$_umbra-color}',\n  9: '0px 5px 6px -3px #{$_umbra-color}',\n  10: '0px 6px 6px -3px #{$_umbra-color}',\n  11: '0px 6px 7px -4px #{$_umbra-color}',\n  12: '0px 7px 8px -4px #{$_umbra-color}',\n  13: '0px 7px 8px -4px #{$_umbra-color}',\n  14: '0px 7px 9px -4px #{$_umbra-color}',\n  15: '0px 8px 9px -5px #{$_umbra-color}',\n  16: '0px 8px 10px -5px #{$_umbra-color}',\n  17: '0px 8px 11px -5px #{$_umbra-color}',\n  18: '0px 9px 11px -5px #{$_umbra-color}',\n  19: '0px 9px 12px -6px #{$_umbra-color}',\n  20: '0px 10px 13px -6px #{$_umbra-color}',\n  21: '0px 10px 13px -6px #{$_umbra-color}',\n  22: '0px 10px 14px -6px #{$_umbra-color}',\n  23: '0px 11px 14px -7px #{$_umbra-color}',\n  24: '0px 11px 15px -7px #{$_umbra-color}'\n);\n\n$_penumbra-elevation-map: (\n  0: '0px 0px 0px 0px #{$_penumbra-color}',\n  1: '0px 1px 1px 0px #{$_penumbra-color}',\n  2: '0px 2px 2px 0px #{$_penumbra-color}',\n  3: '0px 3px 4px 0px #{$_penumbra-color}',\n  4: '0px 4px 5px 0px #{$_penumbra-color}',\n  5: '0px 5px 8px 0px #{$_penumbra-color}',\n  6: '0px 6px 10px 0px #{$_penumbra-color}',\n  7: '0px 7px 10px 1px #{$_penumbra-color}',\n  8: '0px 8px 10px 1px #{$_penumbra-color}',\n  9: '0px 9px 12px 1px #{$_penumbra-color}',\n  10: '0px 10px 14px 1px #{$_penumbra-color}',\n  11: '0px 11px 15px 1px #{$_penumbra-color}',\n  12: '0px 12px 17px 2px #{$_penumbra-color}',\n  13: '0px 13px 19px 2px #{$_penumbra-color}',\n  14: '0px 14px 21px 2px #{$_penumbra-color}',\n  15: '0px 15px 22px 2px #{$_penumbra-color}',\n  16: '0px 16px 24px 2px #{$_penumbra-color}',\n  17: '0px 17px 26px 2px #{$_penumbra-color}',\n  18: '0px 18px 28px 2px #{$_penumbra-color}',\n  19: '0px 19px 29px 2px #{$_penumbra-color}',\n  20: '0px 20px 31px 3px #{$_penumbra-color}',\n  21: '0px 21px 33px 3px #{$_penumbra-color}',\n  22: '0px 22px 35px 3px #{$_penumbra-color}',\n  23: '0px 23px 36px 3px #{$_penumbra-color}',\n  24: '0px 24px 38px 3px #{$_penumbra-color}'\n);\n\n$_ambient-elevation-map: (\n  0: '0px 0px 0px 0px #{$_ambient-color}',\n  1: '0px 1px 3px 0px #{$_ambient-color}',\n  2: '0px 1px 5px 0px #{$_ambient-color}',\n  3: '0px 1px 8px 0px #{$_ambient-color}',\n  4: '0px 1px 10px 0px #{$_ambient-color}',\n  5: '0px 1px 14px 0px #{$_ambient-color}',\n  6: '0px 1px 18px 0px #{$_ambient-color}',\n  7: '0px 2px 16px 1px #{$_ambient-color}',\n  8: '0px 3px 14px 2px #{$_ambient-color}',\n  9: '0px 3px 16px 2px #{$_ambient-color}',\n  10: '0px 4px 18px 3px #{$_ambient-color}',\n  11: '0px 4px 20px 3px #{$_ambient-color}',\n  12: '0px 5px 22px 4px #{$_ambient-color}',\n  13: '0px 5px 24px 4px #{$_ambient-color}',\n  14: '0px 5px 26px 4px #{$_ambient-color}',\n  15: '0px 6px 28px 5px #{$_ambient-color}',\n  16: '0px 6px 30px 5px #{$_ambient-color}',\n  17: '0px 6px 32px 5px #{$_ambient-color}',\n  18: '0px 7px 34px 6px #{$_ambient-color}',\n  19: '0px 7px 36px 6px #{$_ambient-color}',\n  20: '0px 8px 38px 7px #{$_ambient-color}',\n  21: '0px 8px 40px 7px #{$_ambient-color}',\n  22: '0px 8px 42px 7px #{$_ambient-color}',\n  23: '0px 9px 44px 8px #{$_ambient-color}',\n  24: '0px 9px 46px 8px #{$_ambient-color}'\n);\n\n\n// The css property used for elevation. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a will-change rule.\n$mat-elevation-property: box-shadow !default;\n\n// The default duration value for elevation transitions.\n$mat-elevation-transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin mat-elevation($zValue) {\n  @if type-of($zValue) != number or not unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  #{$mat-elevation-property}: #{map-get($_umbra-elevation-map, $zValue)},\n                             #{map-get($_penumbra-elevation-map, $zValue)},\n                             #{map-get($_ambient-elevation-map, $zValue)};\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n//   will-change: $mat-elevation-property, opacity;\n// }\n@function mat-elevation-transition-property-value(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  @return #{$mat-elevation-property} #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin mat-elevation-transition(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  transition: mat-elevation-transition-property-value($duration, $easing);\n  will-change: $mat-elevation-property;\n}\n","// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin mat-truncate-line() {\n  white-space: nowrap;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin mat-line-base($secondary-font-size) {\n  .mat-line {\n    @include mat-truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin mat-normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin mat-line-wrapper-base() {\n  @include mat-normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n","@import '../typography/typography';\n\n\n// Typography\n$mat-body-font-size-base: rem(1.4) !default;\n$mat-font-family: Lato, 'Helvetica Neue', sans-serif !default;\n\n// Media queries\n// TODO: Find a way to respect media query ranges.\n// TODO: For example the xs-breakpoint should not interfere with the sm-breakpoint.\n$mat-xsmall: 'max-width: 600px';\n$mat-small: 'max-width: 960px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Overlay z indices.\n\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000;\n$cdk-z-index-overlay: 1000;\n$cdk-z-index-overlay-backdrop: 1000;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.6);\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n","@import url(fonts.css);\n.web {\n  position: relative;\n  padding-bottom: 52px; }\n\n.web {\n  padding-top: 128px; }\n\n@media (max-width: 600px) and (orientation: portrait) {\n  .web {\n    padding-top: 112px; } }\n\n@media (max-width: 960px) and (orientation: landscape) {\n  .web {\n    padding-top: 96px; } }\n\n.flex-container.with-padding-top {\n  padding-top: 16px; }\n\n.flex-container.with-padding-bottom {\n  padding-bottom: 16px; }\n\n.flex-container.with-padding-left {\n  padding-left: 16px; }\n\n.flex-container.with-padding-horizontal {\n  padding-right: 16px; }\n\n.flex-container.with-padding-vertical {\n  padding-top: 16px;\n  padding-bottom: 16px; }\n\n.flex-container.with-padding-horizontal {\n  padding-left: 16px;\n  padding-right: 16px; }\n\n.flex-container.with-padding-all {\n  padding: 16px; }\n\n.flex-grid > .display-as-block {\n  display: block; }\n\n.flex-center {\n  display: flex !important;\n  align-items: center; }\n\ndiv[fxLayout=\"column\"] .flex-grid {\n  flex: 1 1 auto !important; }\n\n.margin-none {\n  margin: 0; }\n\n.margin-all {\n  margin: 16px; }\n\n.margin-vertical {\n  margin-top: 16px;\n  margin-bottom: 16px; }\n\n.margin-vertical-only {\n  margin: 16px 0; }\n\n.margin-horizontal {\n  margin-left: 16px;\n  margin-right: 16px; }\n\n.margin-horizontal-only {\n  margin: 0 16px; }\n\n.margin-top {\n  margin-top: 16px; }\n\n.margin-top-only {\n  margin: 16px 0 0 0; }\n\n.margin-bottom {\n  margin-bottom: 16px; }\n\n.margin-bottom-only {\n  margin: 0 0 16px 0; }\n\n.margin-left {\n  margin-left: 16px; }\n\n.margin-left-only {\n  margin: 0 0 0 16px; }\n\n.margin-right {\n  margin-right: 16px; }\n\n.margin-right-only {\n  margin: 0 16px 0 0; }\n\n.padding-none {\n  padding: 0; }\n\n.padding-all {\n  padding: 16px; }\n\n.padding-vertical {\n  padding-top: 16px;\n  padding-bottom: 16px; }\n\n.padding-vertical-only {\n  padding: 16px 0; }\n\n.padding-horizontal {\n  padding-left: 16px;\n  padding-right: 16px; }\n\n.padding-horizontal-only {\n  padding: 0 16px; }\n\n.padding-top {\n  padding-top: 16px; }\n\n.padding-top-only {\n  padding: 16px 0 0 0; }\n\n.padding-bottom {\n  padding-bottom: 16px; }\n\n.padding-bottom-only {\n  padding: 0 0 16px 0; }\n\n.padding-left {\n  padding-left: 16px; }\n\n.padding-left-only {\n  padding: 0 0 0 16px; }\n\n.padding-right {\n  padding-right: 16px; }\n\n.padding-right-only {\n  padding: 0 16px 0 0; }\n\n/* Reset */\nhtml,\nbody,\ndiv {\n  border: 0;\n  margin: 0;\n  padding: 0; }\n\n/* Box-sizing border-box */\n* {\n  box-sizing: border-box; }\n\n/* Set up a default font and some padding to provide breathing room */\nbody {\n  font-family: Lato, \"Helvetica Neue\", sans-serif;\n  font-size: 16px;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale; }\n\np {\n  font-weight: 400;\n  letter-spacing: 0.01em;\n  line-height: 20px;\n  margin-bottom: 1em;\n  margin-top: 1em; }\n\nul {\n  margin: 10px 0 0;\n  padding: 0 0 0 20px; }\n\nli {\n  font-weight: 400;\n  margin-top: 4px; }\n\n/* platform specific */\n.desktop lang-switcher {\n  display: none; }\n\n.main-container {\n  max-width: 960px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%; }\n  .main-container.progress-blured {\n    filter: blur(2px); }\n\n.container {\n  /* padding-right: 16px; */\n  max-width: 960px; }\n  .container.centered {\n    text-align: center; }\n\n.page-title {\n  font-size: 16px;\n  text-transform: uppercase;\n  font-weight: 700;\n  color: #225FA2;\n  margin-top: 0; }\n\n.content-title {\n  font-size: 16px;\n  font-weight: 300;\n  color: #555;\n  margin-top: 0; }\n\n.info-content {\n  padding: 16px 0; }\n  .info-content > p.title {\n    font-size: 14px;\n    font-weight: 700;\n    color: #555;\n    margin: 0; }\n  .info-content > p.info {\n    font-size: 14px;\n    font-weight: 300;\n    color: #666;\n    margin: 0; }\n\na.content-link {\n  text-decoration: none;\n  font-size: 14px;\n  color: #2260A4;\n  text-transform: capitalize;\n  font-weight: 300; }\n  a.content-link > span {\n    font-size: 16px;\n    float: left; }\n  a.content-link > .mat-icon {\n    float: left;\n    margin-right: 5px; }\n    a.content-link > .mat-icon + span {\n      line-height: 24px; }\n\n.hr-dashed {\n  border-top: 3px dotted #AAA; }\n\nmd-radio-group > label {\n  display: block;\n  padding-bottom: 8px;\n  padding-top: 8px; }\n\n.seperator-space {\n  display: inline-block;\n  width: 50px; }\n\n.mat-input-suffix .mat-icon.error-icon {\n  color: #F44336;\n  width: 16px;\n  height: 16px;\n  font-size: 16px;\n  font-weight: 700;\n  vertical-align: bottom; }\n\n.mat-input-suffix .mat-icon.no-error-icon {\n  color: #673AB7;\n  width: 16px;\n  height: 16px;\n  font-size: 16px;\n  font-weight: 700;\n  vertical-align: bottom; }\n\n.message-container {\n  width: 100%;\n  background-color: #f5f5f5;\n  box-shadow: inset 0 4px 4px -4px rgba(0, 0, 0, 0.3), inset 0 -4px 4px -4px rgba(0, 0, 0, 0.3), 4px 0 0 0 #f5f5f5, -4px 0 0 0 #F5F5F5;\n  transition: all 250ms ease-in-out;\n  min-height: 0; }\n\n.message-container > .message {\n  display: table;\n  padding: 8px;\n  width: 100%;\n  border-bottom: 1px solid #FFF; }\n\n.message-container > .message:last-child {\n  border-bottom: none; }\n\n.message > .mat-icon {\n  display: table-cell;\n  vertical-align: middle; }\n\n.message > p {\n  display: table-cell;\n  vertical-align: middle;\n  padding-left: 5px;\n  margin: 0;\n  font-size: 14px; }\n\n.message.error > p,\n.message.error > .mat-icon {\n  color: #D9534F; }\n\n.message.warning > p,\n.message.warning > .mat-icon {\n  color: #F0AD4E; }\n\n.message.info > p,\n.message.info > .mat-icon {\n  color: #337AB7; }\n\n.message-container.active {\n  padding: 0;\n  min-height: 60px; }\n\n/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n */\n/* Theme for the ripple elements.*/\n/** The mixins below are shared between md-menu and md-select */\n/**\n * This mixin adds the correct panel transform styles based\n * on the direction that the menu panel opens.\n */\n/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n */\n/**\n * This mixin contains shared option styles between the select and\n * autocomplete components.\n */\n.mat-elevation-z0 {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z1 {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z2 {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z3 {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z4 {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z5 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z6 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z7 {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z8 {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z9 {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z10 {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z11 {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z12 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z13 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z14 {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z15 {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z16 {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z17 {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z18 {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z19 {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z20 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z21 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z22 {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z23 {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z24 {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); }\n\n.mat-ripple {\n  overflow: hidden; }\n\n.mat-ripple.mat-ripple-unbounded {\n  overflow: visible; }\n\n.mat-ripple-element {\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n  transform: scale(0); }\n\n.mat-option {\n  white-space: nowrap;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  line-height: 48px;\n  height: 48px;\n  padding: 0 16px;\n  font-size: 16px;\n  font-family: Lato, \"Helvetica Neue\", sans-serif;\n  text-align: start;\n  text-decoration: none;\n  position: relative;\n  cursor: pointer;\n  outline: none; }\n  .mat-option[disabled] {\n    cursor: default; }\n  .mat-option .mat-icon {\n    margin-right: 16px; }\n    [dir='rtl'] .mat-option .mat-icon {\n      margin-left: 16px; }\n  .mat-option[aria-disabled='true'] {\n    cursor: default;\n    user-select: none; }\n\n.mat-option-ripple {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0; }\n  @media screen and (-ms-high-contrast: active) {\n    .mat-option-ripple {\n      opacity: 0.5; } }\n\n.cdk-visually-hidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  text-transform: none;\n  width: 1px; }\n\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\n  pointer-events: none;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%; }\n\n.cdk-overlay-container {\n  position: fixed;\n  z-index: 1000; }\n\n.cdk-global-overlay-wrapper {\n  display: flex;\n  position: absolute;\n  z-index: 1000; }\n\n.cdk-overlay-pane {\n  position: absolute;\n  pointer-events: auto;\n  box-sizing: border-box;\n  z-index: 1000; }\n\n.cdk-overlay-backdrop {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  pointer-events: auto;\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\n  opacity: 0; }\n  .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n    opacity: 0.48; }\n\n.cdk-overlay-dark-backdrop {\n  background: rgba(0, 0, 0, 0.6); }\n\n.cdk-overlay-transparent-backdrop {\n  background: none; }\n\n.mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1); }\n\n.mat-option:hover:not(.mat-option-disabled), .mat-option:focus:not(.mat-option-disabled) {\n  background: rgba(0, 0, 0, 0.04); }\n\n.mat-option.mat-selected {\n  background: rgba(0, 0, 0, 0.04);\n  color: #673ab7; }\n\n.mat-option.mat-active {\n  background: rgba(0, 0, 0, 0.04);\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-option.mat-option-disabled {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-pseudo-checkbox {\n  color: rgba(0, 0, 0, 0.54); }\n  .mat-pseudo-checkbox::after {\n    color: #fafafa; }\n\n.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate {\n  border: none; }\n  .mat-pseudo-checkbox-checked.mat-primary, .mat-pseudo-checkbox-indeterminate.mat-primary {\n    background: #673ab7; }\n  .mat-pseudo-checkbox-checked.mat-accent, .mat-pseudo-checkbox-indeterminate.mat-accent {\n    background: #ffc107; }\n  .mat-pseudo-checkbox-checked.mat-warn, .mat-pseudo-checkbox-indeterminate.mat-warn {\n    background: #f44336; }\n  .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\n    background: #b0b0b0; }\n\n.mat-app-background {\n  background-color: #fafafa; }\n\n.mat-autocomplete-panel {\n  background: white;\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active) {\n    background: white;\n    color: rgba(0, 0, 0, 0.87); }\n\n.mat-button.mat-button-focus.mat-primary .mat-button-focus-overlay, .mat-icon-button.mat-button-focus.mat-primary .mat-button-focus-overlay, .mat-raised-button.mat-button-focus.mat-primary .mat-button-focus-overlay, .mat-fab.mat-button-focus.mat-primary .mat-button-focus-overlay, .mat-mini-fab.mat-button-focus.mat-primary .mat-button-focus-overlay {\n  background-color: rgba(103, 58, 183, 0.12); }\n\n.mat-button.mat-button-focus.mat-accent .mat-button-focus-overlay, .mat-icon-button.mat-button-focus.mat-accent .mat-button-focus-overlay, .mat-raised-button.mat-button-focus.mat-accent .mat-button-focus-overlay, .mat-fab.mat-button-focus.mat-accent .mat-button-focus-overlay, .mat-mini-fab.mat-button-focus.mat-accent .mat-button-focus-overlay {\n  background-color: rgba(255, 215, 64, 0.12); }\n\n.mat-button.mat-button-focus.mat-warn .mat-button-focus-overlay, .mat-icon-button.mat-button-focus.mat-warn .mat-button-focus-overlay, .mat-raised-button.mat-button-focus.mat-warn .mat-button-focus-overlay, .mat-fab.mat-button-focus.mat-warn .mat-button-focus-overlay, .mat-mini-fab.mat-button-focus.mat-warn .mat-button-focus-overlay {\n  background-color: rgba(244, 67, 54, 0.12); }\n\n.mat-button, .mat-icon-button {\n  background: transparent; }\n  .mat-button.mat-primary, .mat-icon-button.mat-primary {\n    color: #673ab7; }\n  .mat-button.mat-accent, .mat-icon-button.mat-accent {\n    color: #ffd740; }\n  .mat-button.mat-warn, .mat-icon-button.mat-warn {\n    color: #f44336; }\n  .mat-button.mat-primary[disabled], .mat-button.mat-accent[disabled], .mat-button.mat-warn[disabled], .mat-button[disabled][disabled], .mat-icon-button.mat-primary[disabled], .mat-icon-button.mat-accent[disabled], .mat-icon-button.mat-warn[disabled], .mat-icon-button[disabled][disabled] {\n    color: rgba(0, 0, 0, 0.38); }\n  .mat-button:hover.mat-primary .mat-button-focus-overlay, .mat-icon-button:hover.mat-primary .mat-button-focus-overlay {\n    background-color: rgba(103, 58, 183, 0.12); }\n  .mat-button:hover.mat-accent .mat-button-focus-overlay, .mat-icon-button:hover.mat-accent .mat-button-focus-overlay {\n    background-color: rgba(255, 215, 64, 0.12); }\n  .mat-button:hover.mat-warn .mat-button-focus-overlay, .mat-icon-button:hover.mat-warn .mat-button-focus-overlay {\n    background-color: rgba(244, 67, 54, 0.12); }\n\n.mat-raised-button, .mat-fab, .mat-mini-fab {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: white; }\n  .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n    color: rgba(255, 255, 255, 0.87); }\n  .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\n    color: rgba(0, 0, 0, 0.87); }\n  .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\n    color: white; }\n  .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\n    color: rgba(0, 0, 0, 0.38); }\n  .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n    background-color: #673ab7; }\n  .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\n    background-color: #ffd740; }\n  .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\n    background-color: #f44336; }\n  .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\n    background-color: rgba(0, 0, 0, 0.12); }\n\n.mat-fab, .mat-mini-fab {\n  background-color: #ffd740;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-button-toggle {\n  color: rgba(0, 0, 0, 0.38); }\n  .mat-button-toggle.cdk-focused .mat-button-toggle-focus-overlay {\n    background-color: rgba(0, 0, 0, 0.06); }\n\n.mat-button-toggle-checked {\n  background-color: #e0e0e0;\n  color: black; }\n\n.mat-button-toggle-disabled {\n  background-color: #eeeeee;\n  color: rgba(0, 0, 0, 0.38); }\n  .mat-button-toggle-disabled.mat-button-toggle-checked {\n    background-color: #bdbdbd; }\n\n.mat-card {\n  background: white;\n  color: black; }\n\n.mat-card-subtitle {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-checkbox-frame {\n  border-color: rgba(0, 0, 0, 0.54); }\n\n.mat-checkbox-checkmark {\n  fill: #fafafa; }\n\n.mat-checkbox-checkmark-path {\n  stroke: #fafafa !important; }\n\n.mat-checkbox-mixedmark {\n  background-color: #fafafa; }\n\n.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, .mat-checkbox-checked.mat-primary .mat-checkbox-background {\n  background-color: #673ab7; }\n\n.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, .mat-checkbox-checked.mat-accent .mat-checkbox-background {\n  background-color: #ffc107; }\n\n.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, .mat-checkbox-checked.mat-warn .mat-checkbox-background {\n  background-color: #f44336; }\n\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\n  background-color: #b0b0b0; }\n\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\n  border-color: #b0b0b0; }\n\n.mat-checkbox:not(.mat-checkbox-disabled).mat-primary .mat-checkbox-ripple .mat-ripple-element {\n  background-color: rgba(103, 58, 183, 0.26); }\n\n.mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element {\n  background-color: rgba(255, 215, 64, 0.26); }\n\n.mat-checkbox:not(.mat-checkbox-disabled).mat-warn .mat-checkbox-ripple .mat-ripple-element {\n  background-color: rgba(244, 67, 54, 0.26); }\n\n.mat-chip:not(.mat-basic-chip) {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-chip.mat-chip-selected:not(.mat-basic-chip) {\n  background-color: #808080;\n  color: rgba(255, 255, 255, 0.87); }\n  .mat-chip.mat-chip-selected:not(.mat-basic-chip).mat-primary {\n    background-color: #673ab7;\n    color: rgba(255, 255, 255, 0.87); }\n  .mat-chip.mat-chip-selected:not(.mat-basic-chip).mat-accent {\n    background-color: #ffc107;\n    color: rgba(0, 0, 0, 0.87); }\n  .mat-chip.mat-chip-selected:not(.mat-basic-chip).mat-warn {\n    background-color: #f44336;\n    color: white; }\n\n.mat-dialog-container {\n  background: white; }\n\n.mat-icon.mat-primary {\n  color: #673ab7; }\n\n.mat-icon.mat-accent {\n  color: #ffd740; }\n\n.mat-icon.mat-warn {\n  color: #f44336; }\n\n.mat-input-placeholder {\n  color: rgba(0, 0, 0, 0.38); }\n  .mat-focused .mat-input-placeholder {\n    color: #673ab7; }\n    .mat-focused .mat-input-placeholder.mat-accent {\n      color: #ffd740; }\n    .mat-focused .mat-input-placeholder.mat-warn {\n      color: #f44336; }\n\n.mat-input-element:disabled {\n  color: rgba(0, 0, 0, 0.38); }\n\ninput.mat-input-element:-webkit-autofill + .mat-input-placeholder .mat-placeholder-required,\n.mat-focused .mat-input-placeholder.mat-float .mat-placeholder-required {\n  color: #ffd740; }\n\n.mat-input-underline {\n  border-color: rgba(0, 0, 0, 0.12); }\n  .mat-input-underline .mat-input-ripple {\n    background-color: #673ab7; }\n    .mat-input-underline .mat-input-ripple.mat-accent {\n      background-color: #ffd740; }\n    .mat-input-underline .mat-input-ripple.mat-warn {\n      background-color: #f44336; }\n\n.mat-input-container.ng-invalid.ng-touched:not(.mat-focused) .mat-input-placeholder,\n.mat-input-container.ng-invalid.ng-touched:not(.mat-focused) .mat-placeholder-required {\n  color: #f44336; }\n\n.mat-input-container.ng-invalid.ng-touched:not(.mat-focused) .mat-input-underline {\n  border-color: #f44336; }\n\n.mat-input-container.ng-invalid.ng-touched:not(.mat-focused) .mat-hint {\n  color: #f44336; }\n\n.mat-list .mat-list-item, .mat-nav-list .mat-list-item {\n  color: black; }\n\n.mat-list .mat-subheader, .mat-nav-list .mat-subheader {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-divider {\n  border-top-color: rgba(0, 0, 0, 0.12); }\n\n.mat-nav-list .mat-list-item-content:hover, .mat-nav-list .mat-list-item-content.mat-list-item-focus {\n  background: rgba(0, 0, 0, 0.04); }\n\n.mat-menu-content {\n  background: white; }\n\n.mat-menu-item {\n  background: transparent;\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-menu-item[disabled] {\n    color: rgba(0, 0, 0, 0.38); }\n  .mat-menu-item .mat-icon {\n    color: rgba(0, 0, 0, 0.54);\n    vertical-align: middle; }\n  .mat-menu-item:hover:not([disabled]), .mat-menu-item:focus:not([disabled]) {\n    background: rgba(0, 0, 0, 0.04); }\n\n.mat-progress-bar-background {\n  background: url(\"data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%20x%3D%270px%27%20y%3D%270px%27%20enable-background%3D%27new%200%200%205%202%27%20xml%3Aspace%3D%27preserve%27%20viewBox%3D%270%200%205%202%27%20preserveAspectRatio%3D%27none%20slice%27%3E%3Ccircle%20cx%3D%271%27%20cy%3D%271%27%20r%3D%271%27%20fill%3D%27%23d1c4e9%27%2F%3E%3C%2Fsvg%3E\"); }\n\n.mat-progress-bar-buffer {\n  background-color: #d1c4e9; }\n\n.mat-progress-bar-fill::after {\n  background-color: #5e35b1; }\n\n.mat-progress-bar.mat-accent .mat-progress-bar-background {\n  background: url(\"data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%20x%3D%270px%27%20y%3D%270px%27%20enable-background%3D%27new%200%200%205%202%27%20xml%3Aspace%3D%27preserve%27%20viewBox%3D%270%200%205%202%27%20preserveAspectRatio%3D%27none%20slice%27%3E%3Ccircle%20cx%3D%271%27%20cy%3D%271%27%20r%3D%271%27%20fill%3D%27%23ffecb3%27%2F%3E%3C%2Fsvg%3E\"); }\n\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer {\n  background-color: #ffecb3; }\n\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\n  background-color: #ffb300; }\n\n.mat-progress-bar.mat-warn .mat-progress-bar-background {\n  background: url(\"data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%20x%3D%270px%27%20y%3D%270px%27%20enable-background%3D%27new%200%200%205%202%27%20xml%3Aspace%3D%27preserve%27%20viewBox%3D%270%200%205%202%27%20preserveAspectRatio%3D%27none%20slice%27%3E%3Ccircle%20cx%3D%271%27%20cy%3D%271%27%20r%3D%271%27%20fill%3D%27%23ffcdd2%27%2F%3E%3C%2Fsvg%3E\"); }\n\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer {\n  background-color: #ffcdd2; }\n\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\n  background-color: #e53935; }\n\n.mat-progress-spinner path, .mat-progress-circle path, .mat-spinner path {\n  stroke: #5e35b1; }\n\n.mat-progress-spinner.mat-accent path, .mat-progress-circle.mat-accent path, .mat-spinner.mat-accent path {\n  stroke: #ffb300; }\n\n.mat-progress-spinner.mat-warn path, .mat-progress-circle.mat-warn path, .mat-spinner.mat-warn path {\n  stroke: #e53935; }\n\n.mat-radio-outer-circle {\n  border-color: rgba(0, 0, 0, 0.54); }\n  .mat-radio-checked .mat-radio-outer-circle {\n    border-color: #ffd740; }\n  .mat-radio-disabled .mat-radio-outer-circle {\n    border-color: rgba(0, 0, 0, 0.38); }\n\n.mat-radio-inner-circle {\n  background-color: #ffd740; }\n  .mat-radio-disabled .mat-radio-inner-circle {\n    background-color: rgba(0, 0, 0, 0.38); }\n\n.mat-radio-ripple .mat-ripple-element {\n  background-color: rgba(255, 215, 64, 0.26); }\n  .mat-radio-disabled .mat-radio-ripple .mat-ripple-element {\n    background-color: rgba(0, 0, 0, 0.38); }\n\n.mat-select-trigger {\n  color: rgba(0, 0, 0, 0.38); }\n  .mat-select:focus:not(.mat-select-disabled) .mat-select-trigger {\n    color: #673ab7; }\n  .mat-select.ng-invalid.ng-touched:not(.mat-select-disabled) .mat-select-trigger {\n    color: #f44336; }\n\n.mat-select-underline {\n  background-color: rgba(0, 0, 0, 0.12); }\n  .mat-select:focus:not(.mat-select-disabled) .mat-select-underline {\n    background-color: #673ab7; }\n  .mat-select.ng-invalid.ng-touched:not(.mat-select-disabled) .mat-select-underline {\n    background-color: #f44336; }\n\n.mat-select-arrow {\n  color: rgba(0, 0, 0, 0.38); }\n  .mat-select:focus:not(.mat-select-disabled) .mat-select-arrow {\n    color: #673ab7; }\n  .mat-select.ng-invalid.ng-touched:not(.mat-select-disabled) .mat-select-arrow {\n    color: #f44336; }\n\n.mat-select-content, .mat-select-panel-done-animating {\n  background: white; }\n\n.mat-select-value {\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-select-disabled .mat-select-value {\n    color: rgba(0, 0, 0, 0.38); }\n\n.mat-sidenav-container {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-sidenav {\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-sidenav.mat-sidenav-push {\n    background-color: white; }\n\n.mat-sidenav-backdrop.mat-sidenav-shown {\n  background-color: rgba(0, 0, 0, 0.6); }\n\n.mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb {\n  background-color: #ffc107; }\n\n.mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar {\n  background-color: rgba(255, 193, 7, 0.5); }\n\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.06); }\n\n.mat-slide-toggle .mat-ripple-element {\n  background-color: rgba(255, 193, 7, 0.12); }\n\n.mat-slide-toggle.mat-primary.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb {\n  background-color: #673ab7; }\n\n.mat-slide-toggle.mat-primary.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar {\n  background-color: rgba(103, 58, 183, 0.5); }\n\n.mat-slide-toggle.mat-primary:not(.mat-checked) .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.06); }\n\n.mat-slide-toggle.mat-primary .mat-ripple-element {\n  background-color: rgba(103, 58, 183, 0.12); }\n\n.mat-slide-toggle.mat-warn.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb {\n  background-color: #f44336; }\n\n.mat-slide-toggle.mat-warn.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar {\n  background-color: rgba(244, 67, 54, 0.5); }\n\n.mat-slide-toggle.mat-warn:not(.mat-checked) .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.06); }\n\n.mat-slide-toggle.mat-warn .mat-ripple-element {\n  background-color: rgba(244, 67, 54, 0.12); }\n\n.mat-disabled .mat-slide-toggle-thumb {\n  background-color: #bdbdbd; }\n\n.mat-disabled .mat-slide-toggle-bar {\n  background-color: rgba(0, 0, 0, 0.1); }\n\n.mat-slide-toggle-thumb {\n  background-color: #fafafa; }\n\n.mat-slide-toggle-bar {\n  background-color: rgba(0, 0, 0, 0.38); }\n\n.mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26); }\n\n.mat-slider-track-fill {\n  background-color: #ffd740; }\n\n.mat-slider-thumb {\n  background-color: #ffd740; }\n\n.mat-slider-thumb-label {\n  background-color: #ffd740; }\n\n.mat-slider-thumb-label-text {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-slider:hover .mat-slider-track-background,\n.mat-slider-active .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.38); }\n\n.mat-slider-disabled .mat-slider-track-background,\n.mat-slider-disabled .mat-slider-track-fill,\n.mat-slider-disabled .mat-slider-thumb {\n  background-color: rgba(0, 0, 0, 0.26); }\n\n.mat-slider-disabled:hover .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26); }\n\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\n  background-color: black; }\n\n.mat-slider-min-value.mat-slider-thumb-label-showing.mat-slider-active .mat-slider-thumb,\n.mat-slider-min-value.mat-slider-thumb-label-showing.mat-slider-active .mat-slider-thumb-label {\n  background-color: rgba(0, 0, 0, 0.26); }\n\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26);\n  background-color: transparent; }\n\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).mat-slider-active .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.38); }\n\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).mat-slider-active.mat-slider-disabled .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26); }\n\n.mat-tab-nav-bar,\n.mat-tab-header {\n  border-bottom: 1px solid #e0e0e0; }\n  .mat-tab-group-inverted-header .mat-tab-nav-bar, .mat-tab-group-inverted-header\n  .mat-tab-header {\n    border-top: 1px solid #e0e0e0;\n    border-bottom: none; }\n\n.mat-tab-label:focus {\n  background-color: rgba(209, 196, 233, 0.3); }\n\n.mat-ink-bar {\n  background-color: #673ab7; }\n\n.mat-toolbar {\n  background: whitesmoke;\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-toolbar.mat-primary {\n    background: #673ab7;\n    color: rgba(255, 255, 255, 0.87); }\n  .mat-toolbar.mat-accent {\n    background: #ffd740;\n    color: rgba(0, 0, 0, 0.87); }\n  .mat-toolbar.mat-warn {\n    background: #f44336;\n    color: white; }\n\n.mat-tooltip {\n  background: rgba(97, 97, 97, 0.9); }\n","@import '../style/variables';\n\n\n@mixin cdk-overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $cdk-z-index-overlay-container;\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $cdk-z-index-overlay;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $cdk-z-index-overlay-backdrop;\n    pointer-events: auto;\n\n    // TODO(jelbourn): figure out if there are actually spec'ed colors for both light and dark\n    // themes here. Currently using the values from AngularJS Material.\n    transition: opacity $swift-ease-out-duration $swift-ease-out-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 0.48;\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $cdk-overlay-dark-backdrop-background;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    background: none;\n  }\n}\n","// Color palettes from the Material Design spec.\n// See https://www.google.com/design/spec/style/color.html\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n$black-87-opacity: rgba(black, 0.87);\n$white-87-opacity: rgba(white, 0.87);\n$black-12-opacity: rgba(black, 0.12);\n$white-12-opacity: rgba(white, 0.12);\n$black-6-opacity: rgba(black, 0.06);\n$white-6-opacity: rgba(white, 0.06);\n\n$mat-red: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: white,\n    A400: white,\n    A700: white,\n  )\n);\n\n$mat-pink: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: white,\n    A400: white,\n    A700: white,\n  )\n);\n\n$mat-purple: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: white,\n    400: white,\n    500: $white-87-opacity,\n    600: $white-87-opacity,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: white,\n    A400: white,\n    A700: white,\n  )\n);\n\n$mat-deep-purple: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: white,\n    400: white,\n    500: $white-87-opacity,\n    600: $white-87-opacity,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: white,\n    A400: $white-87-opacity,\n    A700: $white-87-opacity,\n  )\n);\n\n$mat-indigo: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: white,\n    400: white,\n    500: $white-87-opacity,\n    600: $white-87-opacity,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: white,\n    A400: white,\n    A700: $white-87-opacity,\n  )\n);\n\n$mat-blue: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: white,\n    A400: white,\n    A700: white,\n  )\n);\n\n$mat-light-blue: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: white,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: white,\n  )\n);\n\n$mat-cyan: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: white,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-teal: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-green: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-light-green: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: $black-87-opacity,\n    600: $black-87-opacity,\n    700: $black-87-opacity,\n    800: white,\n    900: white,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-lime: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: $black-87-opacity,\n    600: $black-87-opacity,\n    700: $black-87-opacity,\n    800: $black-87-opacity,\n    900: white,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-yellow: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: $black-87-opacity,\n    600: $black-87-opacity,\n    700: $black-87-opacity,\n    800: $black-87-opacity,\n    900: $black-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-amber: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: $black-87-opacity,\n    600: $black-87-opacity,\n    700: $black-87-opacity,\n    800: $black-87-opacity,\n    900: $black-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $black-87-opacity,\n  )\n);\n\n$mat-orange: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: $black-87-opacity,\n    600: $black-87-opacity,\n    700: $black-87-opacity,\n    800: white,\n    900: white,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: black,\n  )\n);\n\n$mat-deep-orange: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: white,\n    600: white,\n    700: white,\n    800: white,\n    900: white,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: white,\n    A700: white,\n  )\n);\n\n$mat-brown: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: white,\n    400: white,\n    500: $white-87-opacity,\n    600: $white-87-opacity,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: white,\n    A700: $white-87-opacity,\n  )\n);\n\n$mat-grey: (\n  0: #ffffff,\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  1000: #000000,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    0: $black-87-opacity,\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: $black-87-opacity,\n    500: $black-87-opacity,\n    600: $white-87-opacity,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    1000: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: $black-87-opacity,\n    A700: $white-87-opacity,\n  )\n);\n\n$mat-blue-grey: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $black-87-opacity,\n    100: $black-87-opacity,\n    200: $black-87-opacity,\n    300: $black-87-opacity,\n    400: white,\n    500: white,\n    600: $white-87-opacity,\n    700: $white-87-opacity,\n    800: $white-87-opacity,\n    900: $white-87-opacity,\n    A100: $black-87-opacity,\n    A200: $black-87-opacity,\n    A400: white,\n    A700: $white-87-opacity,\n  )\n);\n\n\n// Background palette for light themes.\n$mat-light-theme-background: (\n  status-bar: map_get($mat-grey, 300),\n  app-bar:    map_get($mat-grey, 100),\n  background: map_get($mat-grey, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: $black-12-opacity,\n  raised-button: white,\n  focused-button: $black-6-opacity,\n);\n\n// Background palette for dark themes.\n$mat-dark-theme-background: (\n  status-bar: black,\n  app-bar:    map_get($mat-grey, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map_get($mat-grey, 800),\n  dialog:     map_get($mat-grey, 800),\n  disabled-button: $white-12-opacity,\n  raised-button: map-get($mat-grey, 800),\n  focused-button: $white-6-opacity,\n);\n\n// Foreground palette for light themes.\n$mat-light-theme-foreground: (\n  base:            black,\n  divider:         $black-12-opacity,\n  dividers:        $black-12-opacity,\n  disabled:        rgba(black, 0.38),\n  disabled-button: rgba(black, 0.38),\n  disabled-text:   rgba(black, 0.38),\n  hint-text:       rgba(black, 0.38),\n  secondary-text:  rgba(black, 0.54),\n  icon:            rgba(black, 0.54),\n  icons:           rgba(black, 0.54),\n  text:            rgba(black, 0.87)\n);\n\n// Foreground palette for dark themes.\n$mat-dark-theme-foreground: (\n  base:            white,\n  divider:         $white-12-opacity,\n  dividers:        $white-12-opacity,\n  disabled:        rgba(white, 0.3),\n  disabled-button: rgba(white, 0.3),\n  disabled-text:   rgba(white, 0.3),\n  hint-text:       rgba(white, 0.3),\n  secondary-text:  rgba(white, 0.7),\n  icon:            white,\n  icons:           white,\n  text:            white\n);\n","@import '../theming/palette';\n@import '../theming/theming';\n\n@mixin mat-option-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n\n  .mat-option {\n    &:hover:not(.mat-option-disabled), &:focus:not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    &.mat-selected {\n      background: mat-color($background, hover);\n      color: mat-color($primary);\n    }\n\n    &.mat-active {\n      background: mat-color($background, hover);\n      color: mat-color($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: mat-color($foreground, hint-text);\n    }\n\n  }\n}","@import '../../theming/theming';\n\n\n@mixin mat-pseudo-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-pseudo-checkbox {\n    color: mat-color(map-get($theme, foreground), secondary-text);\n\n    &::after {\n      color: mat-color($background, background);\n    }\n  }\n\n  .mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate {\n    border: none;\n\n    &.mat-primary {\n      background: mat-color($primary, 500);\n    }\n\n    &.mat-accent {\n      background: mat-color($accent, 500);\n    }\n\n    &.mat-warn {\n      background: mat-color($warn, 500);\n    }\n\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n","@import '../core/theming/theming';\n\n@mixin mat-autocomplete-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-autocomplete-panel {\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    .mat-option {\n      &.mat-selected:not(.mat-active) {\n        background: mat-color($background, card);\n        color: mat-color($foreground, text);\n      }\n    }\n  }\n\n}","@import '../core/theming/theming';\n\n\n// Applies a focus style to an md-button element for each of the supported palettes.\n@mixin _mat-button-focus-color($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: mat-color($primary, 0.12);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: mat-color($accent, 0.12);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: mat-color($warn, 0.12);\n  }\n}\n\n// Applies a property to an md-button element for each of the supported palettes.\n@mixin _mat-button-theme-color($theme, $property, $color: 'default') {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: mat-color($primary, $color);\n  }\n  &.mat-accent {\n    #{$property}: mat-color($accent, $color);\n  }\n  &.mat-warn {\n    #{$property}: mat-color($warn, $color);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &[disabled] {\n    &[disabled] {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: mat-color($palette, disabled-button);\n    }\n  }\n}\n\n@mixin mat-button-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-button, .mat-icon-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    &.mat-button-focus {\n      @include _mat-button-focus-color($theme);\n    }\n  }\n\n  .mat-button, .mat-icon-button {\n    @include _mat-button-theme-color($theme, 'color');\n    background: transparent;\n\n    // Only flat buttons and icon buttons (not raised or fabs) have a hover style.\n    // Use the same visual treatment for hover as for focus.\n    &:hover {\n      @include _mat-button-focus-color($theme);\n    }\n  }\n\n  .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default properties when not using any [color] value.\n    color: mat-color($foreground, text);\n    background-color: mat-color($background, raised-button);\n\n    @include _mat-button-theme-color($theme, 'color', default-contrast);\n    @include _mat-button-theme-color($theme, 'background-color');\n  }\n\n  .mat-fab, .mat-mini-fab {\n    background-color: mat-color($accent);\n    color: mat-color($accent, default-contrast);\n  }\n}\n\n\n","@import '../core/theming/palette';\n@import '../core/theming/theming';\n\n// Applies a focus style to an md-button-toggle element for each of the supported palettes.\n@mixin _mat-button-toggle-focus-color($theme) {\n  $background: map-get($theme, background);\n\n  .mat-button-toggle-focus-overlay {\n    background-color: mat-color($background, focused-button);\n  }\n}\n\n@mixin mat-button-toggle-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-button-toggle {\n    color: mat-color($foreground, hint-text);\n\n    &.cdk-focused {\n      @include _mat-button-toggle-focus-color($theme);\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: mat-color($mat-grey, 300);\n    color: mat-color($foreground, base);\n  }\n\n  .mat-button-toggle-disabled {\n    background-color: map_get($mat-grey, 200);\n    color: mat-color($foreground, disabled-button);\n\n    &.mat-button-toggle-checked {\n      background-color: mat-color($mat-grey, 400);\n    }\n  }\n}\n","@import '../core/theming/palette';\n@import '../core/theming/theming';\n\n\n@mixin mat-card-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-card {\n    background: mat-color($background, card);\n    color: mat-color($foreground, base);\n  }\n\n  .mat-card-subtitle {\n    color: mat-color($foreground, secondary-text);\n  }\n}\n","@import '../core/theming/theming';\n\n\n@mixin mat-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: mat-color($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: mat-color(map-get($theme, foreground), secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an attribute on the SVG in order\n    // for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: mat-color($primary, 500);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: mat-color($accent, 500);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: mat-color($warn, 500);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked, &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n  }\n\n  .mat-checkbox:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-checkbox-ripple .mat-ripple-element {\n      background-color: mat-color($primary, 0.26);\n    }\n\n    &.mat-accent .mat-checkbox-ripple .mat-ripple-element {\n      background-color: mat-color($accent, 0.26);\n    }\n\n    &.mat-warn .mat-checkbox-ripple .mat-ripple-element {\n      background-color: mat-color($warn, 0.26);\n    }\n  }\n}\n","@import '../core/theming/palette';\n@import '../core/theming/theming';\n\n@mixin mat-chips-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // Use spec-recommended color for regular foreground, and utilise contrast color for a grey very\n  // close to the selected spec since no guidance is provided and to ensure palette consistency.\n  $light-foreground: rgba(0, 0, 0, 0.87);\n  $light-selected-foreground: mat-contrast($mat-grey, 600);\n\n  // The spec only provides guidance for light-themed chips. When inside of a dark theme, fall back\n  // to standard background and foreground colors.\n  $unselected-background: if($is-dark-theme, mat-color($background, card), #e0e0e0);\n  $unselected-foreground: if($is-dark-theme, mat-color($foreground, text), $light-foreground);\n\n  $selected-background: if($is-dark-theme, mat-color($background, app-bar), #808080);\n  $selected-foreground: if($is-dark-theme, mat-color($foreground, text), $light-selected-foreground);\n\n  .mat-chip:not(.mat-basic-chip) {\n    background-color: $unselected-background;\n    color: $unselected-foreground;\n  }\n\n  .mat-chip.mat-chip-selected:not(.mat-basic-chip) {\n    background-color: $selected-background;\n    color: $selected-foreground;\n\n    &.mat-primary {\n      background-color: mat-color($primary, 500);\n      color: mat-contrast($primary, 500);\n    }\n\n    &.mat-accent {\n      background-color: mat-color($accent, 500);\n      color: mat-contrast($accent, 500);\n    }\n\n    &.mat-warn {\n      background-color: mat-color($warn, 500);\n      color: mat-contrast($warn, 500);\n    }\n  }\n}\n","@import '../core/theming/palette';\n@import '../core/theming/theming';\n\n\n@mixin mat-dialog-theme($theme) {\n  $background: map-get($theme, background);\n\n  .mat-dialog-container {\n    background: mat-color($background, dialog);\n  }\n}\n","@import '../core/theming/theming';\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-icon-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: mat-color($primary);\n    }\n\n    &.mat-accent {\n      color: mat-color($accent);\n    }\n\n    &.mat-warn {\n      color: mat-color($warn);\n    }\n  }\n}\n","@import '../core/theming/palette';\n@import '../core/theming/theming';\n\n\n@mixin mat-input-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  \n  // Placeholder colors. Required is used for the `*` star shown in the placeholder.\n  $input-placeholder-color: mat-color($foreground, hint-text);\n  $input-floating-placeholder-color: mat-color($primary);\n  $input-required-placeholder-color: mat-color($accent);\n  \n  // Underline colors.\n  $input-underline-color: mat-color($foreground, divider);\n  $input-underline-color-accent: mat-color($accent);\n  $input-underline-color-warn: mat-color($warn);\n  $input-underline-focused-color: mat-color($primary);\n\n  .mat-input-placeholder {\n    color: $input-placeholder-color;\n\n    // :focus is applied to the input, but we apply mat-focused to the other elements\n    // that need to listen to it.\n    .mat-focused & {\n      color: $input-floating-placeholder-color;\n\n      &.mat-accent {\n        color: $input-underline-color-accent;\n      }\n      &.mat-warn {\n        color: $input-underline-color-warn;\n      }\n    }\n  }\n\n  .mat-input-element:disabled {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  // See mat-input-placeholder-floating mixin in input.scss\n  input.mat-input-element:-webkit-autofill + .mat-input-placeholder,\n  .mat-focused .mat-input-placeholder.mat-float {\n    .mat-placeholder-required {\n      color: $input-required-placeholder-color;\n    }\n  }\n\n  .mat-input-underline {\n    border-color: $input-underline-color;\n\n    .mat-input-ripple {\n      background-color: $input-underline-focused-color;\n\n      &.mat-accent {\n        background-color: $input-underline-color-accent;\n      }\n      &.mat-warn {\n        background-color: $input-underline-color-warn;\n      }\n    }\n  }\n\n  .mat-input-container.ng-invalid.ng-touched:not(.mat-focused) {\n    .mat-input-placeholder,\n    .mat-placeholder-required {\n      color: $input-underline-color-warn;\n    }\n\n    .mat-input-underline {\n      border-color: $input-underline-color-warn;\n    }\n    .mat-hint{\n      color: $input-underline-color-warn;\n    }\n  }\n}\n","@import '../core/theming/palette';\n@import '../core/theming/theming';\n\n\n@mixin mat-list-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-list, .mat-nav-list {\n    .mat-list-item {\n      color: mat-color($foreground, base);\n    }\n\n    .mat-subheader {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  .mat-divider {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-nav-list .mat-list-item-content {\n    &:hover, &.mat-list-item-focus {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n","@import '../core/theming/palette';\n@import '../core/theming/theming';\n\n\n@mixin mat-menu-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-menu-content {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: mat-color($foreground, 'text');\n\n    &[disabled] {\n      color: mat-color($foreground, 'disabled');\n    }\n\n    .mat-icon {\n      color: mat-color($foreground, 'icon');\n      vertical-align: middle;\n    }\n\n    &:hover:not([disabled]), &:focus:not([disabled]) {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n","@import '../core/theming/palette';\n@import '../core/theming/theming';\n\n\n@mixin mat-progress-bar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-bar-background {\n    background: #{_mat-progress-bar-buffer($primary, 100)};\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: mat-color($primary, 100);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: mat-color($primary, 600);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      background: #{_mat-progress-bar-buffer($accent, 100)};\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($accent, 100);\n    }\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($accent, 600);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      background: #{_mat-progress-bar-buffer($warn, 100)};\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($warn, 100);\n    }\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($warn, 600);\n    }\n  }\n}\n\n// TODO(josephperrott): Find better way to inline svgs.\n// In buffer mode a repeated SVG object is used as a background.\n// Each of the following defines the SVG object for each of the class defined colors.\n//\n// The string is a URL encoded version of:\n//\n// <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n//      version=\"1.1\" x=\"0px\" y=\"0px\" enable-background=\"new 0 0 5 2\"\n//      xml:space=\"preserve\" viewBox=\"0 0 5 2\" preserveAspectRatio=\"none slice\">\n//   <circle cx=\"1\" cy=\"1\" r=\"1\" fill=\"{INJECTED_COLOR}\"/>\n// </svg>\n@function _mat-progress-bar-buffer($palette, $hue) {\n  $color: mat-color($palette, $hue) + '';\n\n  // We also need to escape the hash in hex colors,\n  // otherwise IE will throw an XML error.\n  @if str-index($color, '#') == 1 {\n    $color: '%23' + str-slice($color, 2);\n  }\n\n  $result: '' +\n    'data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2F' +\n    'www.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%2' +\n    '7%20x%3D%270px%27%20y%3D%270px%27%20enable-background%3D%27new%200%200%205%202%27%20xml%' +\n    '3Aspace%3D%27preserve%27%20viewBox%3D%270%200%205%202%27%20preserveAspectRatio%3D%27none' +\n    '%20slice%27%3E%3Ccircle%20cx%3D%271%27%20cy%3D%271%27%20r%3D%271%27%20fill%3D%27' +\n    $color + '%27%2F%3E%3C%2Fsvg%3E';\n\n  @return url($result);\n}\n","@import '../core/theming/palette';\n@import '../core/theming/theming';\n\n\n@mixin mat-progress-spinner-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-spinner, .mat-progress-circle, .mat-spinner {\n    path {\n      stroke: mat-color($primary, 600);\n    }\n\n    &.mat-accent path {\n      stroke: mat-color($accent, 600);\n    }\n\n    &.mat-warn path {\n      stroke: mat-color($warn, 600);\n    }\n  }\n}\n","@import '../core/theming/palette';\n@import '../core/theming/theming';\n\n\n@mixin mat-radio-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: mat-color($foreground, secondary-text);\n\n    .mat-radio-checked & {\n      border-color: mat-color($accent);\n    }\n\n    .mat-radio-disabled & {\n      border-color: mat-color($foreground, disabled);\n    }\n  }\n\n  .mat-radio-inner-circle {\n    background-color: mat-color($accent);\n\n    .mat-radio-disabled & {\n      background-color: mat-color($foreground, disabled);\n    }\n  }\n\n  .mat-radio-ripple .mat-ripple-element {\n    background-color: mat-color($accent, 0.26);\n\n    .mat-radio-disabled & {\n      background-color: mat-color($foreground, disabled);\n    }\n  }\n}\n","@import '../core/theming/palette';\n@import '../core/theming/theming';\n\n@mixin mat-select-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $warn: map-get($theme, warn);\n\n  .mat-select-trigger {\n    color: mat-color($foreground, hint-text);\n\n    .mat-select:focus:not(.mat-select-disabled) & {\n      color: mat-color($primary);\n    }\n\n    .mat-select.ng-invalid.ng-touched:not(.mat-select-disabled) & {\n      color: mat-color($warn);\n    }\n  }\n\n  .mat-select-underline {\n    background-color: mat-color($foreground, divider);\n\n    .mat-select:focus:not(.mat-select-disabled) & {\n      background-color: mat-color($primary);\n    }\n\n    .mat-select.ng-invalid.ng-touched:not(.mat-select-disabled) & {\n      background-color: mat-color($warn);\n    }\n  }\n\n  .mat-select-arrow {\n    color: mat-color($foreground, hint-text);\n\n    .mat-select:focus:not(.mat-select-disabled) & {\n      color: mat-color($primary);\n    }\n\n    .mat-select.ng-invalid.ng-touched:not(.mat-select-disabled) & {\n      color: mat-color($warn);\n    }\n  }\n\n  .mat-select-content, .mat-select-panel-done-animating {\n    background: mat-color($background, card);\n  }\n\n  .mat-select-value {\n    color: mat-color($foreground, text);\n\n    .mat-select-disabled & {\n      color: mat-color($foreground, hint-text);\n    }\n  }\n}\n","@import '../core/theming/palette';\n@import '../core/theming/theming';\n\n\n@mixin mat-sidenav-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // We use invert() here to have the darken the background color expected to be used. If the\n  // background is light, we use a dark backdrop. If the background is dark, \n  // we use a light backdrop.\n  $sidenav-backdrop-color: invert(mat-color($background, card, 0.6)) !default;\n  $sidenav-background-color: mat-color($background, dialog) !default;\n  $sidenav-container-background-color:  mat-color($background, background) !default;\n  $sidenav-push-background-color: mat-color($background, dialog) !default;\n\n  .mat-sidenav-container {\n    background-color: $sidenav-container-background-color;\n    color: mat-color($foreground, text);\n  }\n\n  .mat-sidenav {\n    background-color: $sidenav-background-color;\n    color: mat-color($foreground, text);\n\n    &.mat-sidenav-push {\n      background-color: $sidenav-push-background-color;\n    }\n  }\n\n  .mat-sidenav-backdrop.mat-sidenav-shown {\n    background-color: $sidenav-backdrop-color;\n  }\n}\n","@import '../core/theming/palette';\n@import '../core/theming/theming';\n\n@mixin _mat-slide-toggle-checked($palette, $thumb-checked-hue) {\n  // Do not apply the checked colors if the toggle is disabled, because the specificity would be to high for\n  // the disabled styles.\n  &.mat-checked:not(.mat-disabled) {\n    .mat-slide-toggle-thumb {\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      background-color: mat-color($palette, $thumb-checked-hue, 0.5);\n    }\n  }\n}\n\n// Applies the specified colors to the slide-toggle ripple elements.\n@mixin _mat-slide-toggle-ripple($palette, $ripple-unchecked-color, $ripple-checked-color) {\n  &:not(.mat-checked) .mat-ripple-element {\n    background-color: $ripple-unchecked-color;\n  }\n  .mat-ripple-element {\n    background-color: $ripple-checked-color;\n  }\n}\n\n@mixin mat-slide-toggle-theme($theme) {\n  $is-dark: map_get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // Color hues based on the specs, which prescribe different hues for dark and light themes\n  // https://material.google.com/components/selection-controls.html#selection-controls-switch\n  $thumb-normal-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: if($is-dark, 200, 500);\n  $thumb-disabled-hue: if($is-dark, 800, 400);\n\n  $bar-normal-color: mat-color($foreground, disabled);\n  $bar-disabled-color: if($is-dark, rgba(white, 0.12), rgba(black, 0.1));\n\n  // Ripple colors are based on the current palette and the state of the slide-toggle.\n  // See https://material.google.com/components/selection-controls.html#selection-controls-switch\n  $ripple-checked-opacity: 0.12;\n  $ripple-unchecked-color: mat-color($foreground, base, if($is-dark, 0.12, 0.06));\n  $ripple-primary-color: mat-color($primary, $thumb-checked-hue, $ripple-checked-opacity);\n  $ripple-accent-color: mat-color($accent, $thumb-checked-hue, $ripple-checked-opacity);\n  $ripple-warn-color: mat-color($warn, $thumb-checked-hue, $ripple-checked-opacity);\n\n  .mat-slide-toggle {\n    @include _mat-slide-toggle-checked($accent, $thumb-checked-hue);\n    @include _mat-slide-toggle-ripple($accent, $ripple-unchecked-color, $ripple-accent-color);\n\n    &.mat-primary {\n      @include _mat-slide-toggle-checked($primary, $thumb-checked-hue);\n      @include _mat-slide-toggle-ripple($accent, $ripple-unchecked-color, $ripple-primary-color);\n    }\n  \n    &.mat-warn {\n      @include _mat-slide-toggle-checked($warn, $thumb-checked-hue);\n      @include _mat-slide-toggle-ripple($accent, $ripple-unchecked-color, $ripple-warn-color);\n    }\n\n  }\n\n  .mat-disabled {\n    .mat-slide-toggle-thumb {\n      // The thumb of the slide-toggle always uses the hue 400 of the grey palette in dark or light themes.\n      // Since this is very specific to the slide-toggle component, we're not providing\n      // it in the background palette.\n      background-color: mat-color($mat-grey, $thumb-disabled-hue);\n    }\n    .mat-slide-toggle-bar {\n      background-color: $bar-disabled-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    background-color: mat-color($mat-grey, $thumb-normal-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-normal-color;\n  }\n}\n","@import '../core/theming/palette';\n@import '../core/theming/theming';\n\n\n@mixin mat-slider-theme($theme) {\n  $accent: map-get($theme, accent);\n\n  $mat-slider-off-color: rgba(black, 0.26);\n  $mat-slider-off-focused-color: rgba(black, 0.38);\n  $mat-slider-disabled-color: rgba(black, 0.26);\n  $mat-slider-labeled-min-value-thumb-color: black;\n  $mat-slider-labeled-min-value-thumb-label-color: rgba(black, 0.26);\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-slider-track-fill {\n    background-color: mat-color($accent);\n  }\n\n  .mat-slider-thumb {\n    background-color: mat-color($accent);\n  }\n\n  .mat-slider-thumb-label {\n    background-color: mat-color($accent);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: mat-color($accent, default-contrast);\n  }\n\n  .mat-slider:hover,\n  .mat-slider-active {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider-min-value {\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.mat-slider-active {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.mat-slider-active {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n}\n","@import '../core/theming/palette';\n@import '../core/theming/theming';\n\n@mixin mat-tabs-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $header-border: 1px solid mat-color($background, status-bar);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n\n    .mat-tab-group-inverted-header & {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label:focus {\n    background-color: mat-color($primary, 100, 0.3);\n  }\n\n  .mat-ink-bar {\n    background-color: mat-color($primary, 500);\n  }\n}\n","@import '../core/theming/palette';\n@import '../core/theming/theming';\n\n\n@mixin _mat-toolbar-color($palette) {\n  background: mat-color($palette);\n  color: mat-color($palette, default-contrast);\n}\n\n@mixin mat-toolbar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-toolbar {\n    background: mat-color($background, app-bar);\n    color: mat-color($foreground, text);\n\n    &.mat-primary {\n      @include _mat-toolbar-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-toolbar-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-toolbar-color($warn);\n    }\n  }\n}\n","@import '../core/theming/palette';\n@import '../core/theming/theming';\n\n\n@mixin mat-tooltip-theme($theme) {\n  .mat-tooltip {\n    background: mat-color($mat-grey, 700, 0.9);\n  }\n}\n"]}